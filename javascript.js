// Estado do jogo atualizado
let player = {
    age: 16,
    overall: 65,
    club: 'BSL Team',
    balance: 10000,
    marketValue: 10000000,
    morale: 80,
    form: 75,
    clubs: ['BSL Team'],
    achievements: [],
    form: 75,
    morale: 80,
    goals: 0,
    assists: 0,
    injuries: [],
    titles: [],
    history: [],
    seasonalStats: { goals: 0, assists: 0 }
};

let progressionData = {
    age: [16], 
    overall: [65],
    marketValue: [10000000],
    balance: [10000],
    morale: [80],
    form: [75]
};

let progressChart;

// Calcular o valor de mercado
function updateMarketValue() {
    const MAX_VALUE     = 200_000_000; // over 100 + idade ideal
    const MIN_VALUE     = 10_000;
    const OVERALL_EXP   = 7;           // controla a curvatura do impact do overall
    const AGE_DECLINE1  = 0.7;         // quanto declina at√© os 30 anos
    const AGE_DECLINE2  = 0.2;         // decl√≠nio extra at√© os 40 anos

    // 1) Impacto do overall (exponencial para derrubar os m√©dios)
    const overallFactor = Math.pow(player.overall / 100, OVERALL_EXP);
    //   ‚Ä¢ overall 70 ‚Üí 0.7^7 ‚âà 0.082 ‚Üí raw cap ‚âà 16 M  
    //   ‚Ä¢ overall 80 ‚Üí 0.8^7 ‚âà 0.210 ‚Üí raw cap ‚âà 42 M  

    // 2) Impacto da idade (decl√≠nio suave e cont√≠nuo)
    let ageFactor;
    if (player.age <= 18) {
        ageFactor = 1;
    } else if (player.age <= 30) {
        // declina LINEARMENTE at√© 30, perdendo AGE_DECLINE1 (70% do valor)
        ageFactor = 1 - ((player.age - 18) / (30 - 18)) * AGE_DECLINE1;
    } else {
        // de 30 a 40 anos perde mais AGE_DECLINE2 (20% do valor)
        ageFactor = (1 - AGE_DECLINE1) - ((player.age - 30) / (40 - 30)) * AGE_DECLINE2;
    }
    // garante que nunca v√° abaixo de 10% nem acima de 100%
    ageFactor = Math.min(1, Math.max(0.1, ageFactor));

    // 3) Impacto da forma: ¬±20% a partir de 50
    let formFactor = 1 + ((player.form - 50) / 50) * 0.2;
    // forma=100 ‚Üí +20%; forma=0 ‚Üí -20%

    // 4) Boost de conquistas: +5% por conquista
    const achievementBoost = 1 + player.achievements.length * 0.05;

    // 5) C√°lculo final
    const rawValue = MAX_VALUE * overallFactor * ageFactor;
    player.marketValue = Math.round(
        Math.max(MIN_VALUE, rawValue * formFactor * achievementBoost)
    );
}

function calculateGoalChance(overall) {
    // Probabilidade de gol por partida:
    // ‚Ä¢ At√© 50 de over ‚Üí 2% a 5% (jogadores muito fracos raramente marcam)
    // ‚Ä¢ 50‚Äì70 ‚Üí sobe de 5% a 15%
    // ‚Ä¢ 70‚Äì90 ‚Üí sobe de 15% a 25%
    // ‚Ä¢ 90‚Äì100 ‚Üí sobe de 25% a 35%
    if (overall < 50) {
      return 0.01 + (overall / 50) * 0.03;        // 0.02‚Üí0.05
    } else if (overall < 70) {
      return 0.02 + ((overall - 50) / 20) * 0.04; // 0.05‚Üí0.15
    } else if (overall < 90) {
      return 0.03 + ((overall - 70) / 20) * 0.04; // 0.15‚Üí0.25
    } else {
      return 0.05 + ((overall - 90) / 10) * 0.06; // 0.25‚Üí0.35
    }
  }
  
  function calculateAssistChance(overall) {
    // Probabilidade de assist√™ncia por partida:
    // ‚Ä¢ At√© 50 ‚Üí 1% a 3%
    // ‚Ä¢ 50‚Äì70 ‚Üí 3% a 8%
    // ‚Ä¢ 70‚Äì90 ‚Üí 8% a 15%
    // ‚Ä¢ 90‚Äì100 ‚Üí 15% a 25%
    if (overall < 50) {
      return 0.01 + (overall / 50) * 0.02;        // 0.01‚Üí0.03
    } else if (overall < 70) {
      return 0.02 + ((overall - 50) / 20) * 0.03; // 0.03‚Üí0.08
    } else if (overall < 90) {
      return 0.03 + ((overall - 70) / 20) * 0.04; // 0.08‚Üí0.15
    } else {
      return 0.04 + ((overall - 90) / 10) * 0.05; // 0.15‚Üí0.25
    }
  }
  

function updateMatchStats() {
    document.getElementById('goals').textContent = player.goals;
    document.getElementById('assists').textContent = player.assists;
    document.getElementById('form').textContent = Math.round(player.form);
    document.getElementById('morale').textContent = Math.round(player.morale);
}

function checkChampionshipTitle() {
    const currentLeague = league.currentView === 'A' ? league.serieA : league.serieB;
    const position = currentLeague.standings.findIndex(t => t.name === player.club) + 1;
    
    if (position === 1) {
        const titleName = `Campe√£o S√©rie ${league.currentView} - Temporada ${league.season}`;
        if (!player.titles.includes(titleName)) {
            player.titles.push(titleName);
            updateTrophyCase();
        }
    }
}

function updateTrophyCase() {
    const container = document.getElementById('titles-list');
    const titlesCount = player.titles.filter(t => t.includes("Campe√£o")).length;
    const goldenBoots = player.achievements.filter(a => a.includes("Artilheiro")).length;
    const assistLeads = player.achievements.filter(a => a.includes("Assist√™ncias")).length;
    const mvps = player.achievements.filter(a => a.includes("Melhor Jogador")).length;

    document.getElementById('titles-count').textContent = titlesCount;
    document.getElementById('top-scorer').textContent = goldenBoots;
    document.getElementById('top-assists').textContent = assistLeads;
    document.getElementById('mvp-count').textContent = mvps;
    container.innerHTML = '';
    
    // Combinar t√≠tulos e conquistas com √≠cones diferentes
    const allAchievements = [
        ...player.titles.map(title => ({ text: title, icon: 'üèÜ' })), 
        ...player.achievements.map(ach => ({ 
            text: ach, 
            icon: ach.includes('Puskas') ? '‚≠ê' : 
                  ach.includes('Artilheiro') ? '‚öΩ' :
                  ach.includes('Assist') ? 'üéØ' : 'üåü' 
        }))
    ];

    allAchievements.forEach(achievement => {
        const div = document.createElement('div');
        div.className = 'title-item';
        div.innerHTML = `
            <span>${achievement.icon}</span>
            <div>${achievement.text}</div>
        `;
        container.appendChild(div);
    });
}


function addHistoryEvent(text) {
    const season = league.season;
    const event = {
        text: `T${season}: ${text}`,
        date: season
    };
    player.history.unshift(event);
    updateEventHistory();
}

function updateEventHistory() {
    const container = document.getElementById('events-list');
    container.innerHTML = '';
    
    player.history.forEach(event => {
        const div = document.createElement('div');
        div.className = 'event-item';
        div.innerHTML = `
            <span>üìÖ</span>
            <div>${event.text}</div>
        `;
        container.appendChild(div);
    });
}




// Eventos de Hist√≥ria
const storyEvents = [
    {
      age: 18,
      messages: [
        "Dois anos de profissionalismo bateram √† porta e te levaram para uma rotina intensa: manh√£s de treino t√©cnico sob sol escaldante, tardes de muscula√ß√£o e sess√µes de fisioterapia para superar as primeiras les√µes que testaram sua determina√ß√£o.",
        "Entre viagens e mudan√ßas de clube, voc√™ aprendeu que ser jogador n√£o √© apenas talento, mas disciplina: ajustes na dieta, estudo t√°tico de advers√°rios e controle emocional nas entrevistas tornaram-se parte do seu dia a dia.",
        "A conviv√™ncia com veteranos ensinou que resili√™ncia faz diferen√ßa: cada momento de crise no vesti√°rio virou li√ß√£o, forjando um car√°ter pronto para os altos e baixos da carreira."  
      ]
    },
    {
      age: 21,
      messages: [
        "O casamento trouxe uma nova dimens√£o √† sua vida: al√©m de esquemas t√°ticos, agora voc√™ equilibra planejamento financeiro familiar, divis√£o de tarefas em casa e a responsabilidade de ser exemplo para quem ama.",
        "Os treinos ganharam um prop√≥sito extra: nos momentos de dificuldades em campo, a for√ßa do v√≠nculo conjugal surgiu como abrigo, lembrando que vit√≥ria tamb√©m se constr√≥i com apoio emocional.",
        "As primeiras manh√£s acordando ao lado do c√¥njuge antes de partir para os aeroportos refor√ßaram que, fora do gramado, o amor √© seu combust√≠vel mais poderoso."  
      ]
    },
    {
      age: 23,
      messages: [
        "Determinado a alcan√ßar o auge, voc√™ tra√ßou um plano de cinco anos: aprimorar finaliza√ß√£o com treinos espec√≠ficos tr√™s vezes por semana, contratar um mentor de mindset esportivo e contratar um nutricionista para otimizar a performance.",
        "Sess√µes de v√≠deo-analise viraram rotina: estudar posicionamento de atacantes de elite, entender as fraquezas das defesas rivais e adaptar seu estilo para se tornar imprevis√≠vel.",
        "A cada amistoso de pr√©-temporada, a confian√ßa crescia: gols de cobertura e assist√™ncias milim√©tricas mostraram que a escalada rumo ao topo est√° bem viva em cada gota de suor."  
      ]
    },
    {
      age: 28,
      messages: [
        "No √°pice da carreira, voc√™ revisita os sacrif√≠cios: noites em claro revendo partidas, dietas restritivas que for√ßaram a renunciar prazeres e a famigerada fisioterapia di√°ria para manter o corpo afiado.",
        "As amizades constru√≠das nos gramados parceiros de quarto em excurs√µes e confidentes no vesti√°rio viraram irm√£os forjados em conquistas como t√≠tulos nacionais e disputas continentais.",
        "Cada ta√ßa erguida e cada placa de ‚Äòjogador do jogo‚Äô confirmam que cada treinamento doloroso valeu a pena, transformando suor em gl√≥ria e lendas em realidade."  
      ]
    },
    {
      age: 30,
      messages: [
        "Aos 30, o corpo come√ßa a sinalizar: acelera√ß√£o j√° n√£o √© seu ponto forte, e pequenos inc√¥modos musculares surgem ap√≥s jogos intensos, exigindo aten√ß√£o redobrada em recupera√ß√£o.",
        "Voc√™ incorporou t√©cnicas avan√ßadas de regenera√ß√£o: crioterapia, sess√µes de pilates e acompanhamento de um preparador f√≠sico especializado em atletas experientes.",
        "Apesar da leve queda na explos√£o, a vis√£o de jogo e o posicionamento compensam sua intelig√™ncia t√°tica faz voc√™ ditar o ritmo da partida e servir passes que s√≥ olhos treinados percebem."  
      ]
    },
    {
      age: 33,
      messages: [
        "A transi√ß√£o para centroavante fixo exigiu redefinir seus atributos: foco em trabalho de for√ßa para segurar zagueiros, aprimoramento de jogo a√©reo e estudo de rotas de infiltra√ß√£o na √°rea.",
        "Inspirado pelo CR7, voc√™ adotou uma rotina de treinos de finaliza√ß√£o de precis√£o e exerc√≠cios de pliometria para manter a pot√™ncia do salto, buscando cada vez mais gols decisivos.",
        "O legado passou a ser certeza: n√£o apenas pelos n√∫meros, mas pela influ√™ncia que voc√™ exerce em jovens atacantes, ensinando que dedica√ß√£o permanente √© o que faz um √≠dolo durar."  
      ]
    },
    {
      age: 38,
      messages: [
        "Com o filho prestes a completar 15 anos, voc√™ se v√™ n√£o s√≥ como atleta, mas como mentor: dedica parte dos treinos a ensinar fundamentos de t√©cnica, disciplina de treino e postura √©tica.",
        "As conversas de pai e filho agora incluem an√°lises t√°ticas antes de dormir, enquanto o garoto anota tudo em um caderno para um dia brilhar nos campos.",
        "Ver sua pr√≥pria heran√ßa no talento e na determina√ß√£o dele transforma cada lance compartilhado em campo em um momento de profundo orgulho e prop√≥sito renovado."  
      ]
    },
    {
      age: 40,
      messages: [
        "Na primeira temporada ao lado do seu filho, cada partida se converte em uma celebra√ß√£o familiar: voc√™s combinam jogadas treinadas e comemoram os gols abra√ßados, emocionando a torcida.",
        "Dentro de campo, sua experi√™ncia orienta os passos dele: instru√ß√µes em tempo real, prote√ß√µes t√°ticas e incentivo para que ele arrisque dribles e finaliza√ß√µes, √© uma emo√ß√£o a parte cada partida ao lado de seu filho.",
        "Fora de campo, entrevistas coletivas se tornam hist√≥rias de legado e emo√ß√£o, mostrando ao mundo que futebol √© paix√£o que atravessa gera√ß√µes, √© uma emo√ß√£o a parte cada partida ao lado de seu filho."  
      ]
    },
    {
      age: 41,
      messages: [
        "No segundo ano juntos, o talento do seu filho atrai o interesse do clube dos sonhos dele: voc√™ celebra a not√≠cia com l√°grimas de alegria e consci√™ncia de que chegou a hora de solt√°-lo.",
        "O √∫ltimo jogo com a camisa do time atual de seu filho, √© um misto de festa e nostalgia voc√™ se esfor√ßa para abrir espa√ßo e criar oportunidades, enquanto cada passe lembra a jornada compartilhada.",
        "Agora, como jogador, pai e mentor √† dist√¢ncia, voc√™ acompanha a nova fase de seu filho que est√° a mudar de clube, certo de que o legado que semeou florescer√° em novos gramados."  
      ]
    },
    {
      age: 42,
      messages: [
        "Aos 42, chega a hora de virar a p√°gina, empresas lhe convidam para continuar no meio esportivo. Porem, Se voc√™ se sentir imortal, poder√° continuar jogando pelo infinito.",
        "Emocionado, agradece por cada chute, cada ta√ßa e cada torcida que aplaudiu seu nome, e convida a pr√≥xima gera√ß√£o a escrever novos cap√≠tulos dessa hist√≥ria. Porem, Se voc√™ se sentir imortal, poder√° continuar jogando pelo infinito.",
        "A aposentadoria √© apenas um ponto de virada, Agora √© o momento se acompanhar seu filho, e ser um grande torcedor. Porem, Se voc√™ se sentir imortal, poder√° continuar jogando pelo infinito."  
      ]
    }
  ];
  

  function checkStoryEvents() {
    const currentAge = Math.floor(player.age);
    const event = storyEvents.find(e => e.age === currentAge && !e.triggered);
    
    if(event) {
      event.triggered = true;
      const randomMessage = event.messages[Math.floor(Math.random() * event.messages.length)];
      
      showStoryEvent({
        title: `Jornada aos ${currentAge} Anos`,
        text: randomMessage,
        icon: getEventIcon(currentAge),
        age: currentAge // ‚Üê Adicione esta linha
      });
    }
  }
  
  function getEventIcon(age) {
    const icons = {
      18: 'üéØ',
      21: 'üíç',
      23: 'üöÄ',
      28: 'üèÜ',
      30: '‚åõ',
      33: 'üîÑ',
      38: 'üë®üë¶',
      40: 'üë®üëß',
      41: 'üëã',
      42: 'üåü'
    };
    return icons[age] || 'üìñ';
  }
  
  function showStoryEvent(event) {
    const modal = document.getElementById('story-modal');
    const img = document.getElementById('story-image');
    const titleElement = document.getElementById('story-title');
    const textElement = document.getElementById('story-text');
    const choicesElement = document.getElementById('story-choices');
    toggleMusic(false);

    // Mapeamento de imagens por idade
    const ageImages = {
        18: 'img/story/age18.jpg',
        21: 'img/story/wedding.jpg',
        23: 'img/story/planning.jpg',
        28: 'img/story/peak.jpg', 
        30: 'img/story/decline.jpg',
        33: 'img/story/transition.jpg',
        38: 'img/story/mentor.jpg',
        40: 'img/story/family.jpg',
        41: 'img/story/family2.jpg',
        42: 'img/story/retirement.jpg'
    };

    // Carregar imagem correspondente
    img.src = ageImages[event.age] || 'img/story/default.jpg';
    img.alt = `Ilustra√ß√£o para evento aos ${event.age} anos`;

    // Configurar conte√∫do
    titleElement.innerHTML = `
        <span class="story-icon">${event.icon}</span>
        ${event.title}
    `;
    textElement.textContent = event.text;

    // Configurar bot√£o
    choicesElement.innerHTML = `
        <button class="choice-button story-choice" 
                onclick="document.getElementById('story-modal').classList.add('hidden');
                         toggleMusic(false);
                         updateDashboard();
                         updateChart();">
            ${event.age === 42 ? 'Encerrar Carreira' : 'Continuar Jornada'}
        </button>
    `;

    // Exibir modal
    modal.classList.remove('hidden');

    // Adicionar efeito de √°udio opcional
    if(event.age === 28) new Audio('sound/fanfare.mp3').play();
    if(event.age === 42) new Audio('sound/end.mp3').play();
}



























const sportsBrands = ['Nike', 'Adidas', 'Puma', 'Under Armour', 'Reebok', 'New Balance'];


const events = [
    {
        title: "Les√£o no Treino!",
        text: "Voc√™ sofreu uma les√£o durante o treino!",
        choices: [
            {
                text: "Tratamento caro (‚Ç¨20.000)",
                action: () => {
                    player.balance -= 20000;
                    const injuryImpact = -Math.floor(Math.random() * 3 + 1);
                    player.overall = Math.max(40, player.overall + injuryImpact);
                    showMessage(`Recupera√ß√£o completa! Overall reduzido em ${Math.abs(injuryImpact)}`);
                },
                tooltip: "Recupera√ß√£o r√°pida com menos impacto"
            },
            {
                text: "Descansar naturalmente",
                action: () => {
                    const injuryImpact = -Math.floor(Math.random() * 8 + 3);
                    player.overall = Math.max(40, player.overall + injuryImpact);
                    player.form -= 15;
                    showMessage(`Les√£o grave! Overall -${Math.abs(injuryImpact)}, Forma -15`);
                },
                tooltip: "Risco de grande perda de performance"
            }
        ]
    },
    {
        title: "Patroc√≠nio Esportivo!",
        text: "Uma marca quer te patrocinar!",
        choices: [
            {
                text: "Assinar com marca de energia",
                action: () => {
                    player.balance += 30000;
                    player.morale = Math.min(100, player.morale + 5);
                    addHistoryEvent('Assinou patroc√≠nio energ√©tico e ganhou ‚Ç¨30k');
                    showMessage("Voc√™ ganhou ‚Ç¨30k e +5 de moral!");
                },
                tooltip: "+‚Ç¨30k, +5 Moral"
            },
            {
                text: "Assinar com marca esportiva",
                action: () => {
                    player.overall = Math.min(100, player.overall + 2);
                    showMessage("Equipamento profissional! +2 Overall");
                    const randomBrand = sportsBrands[Math.floor(Math.random() * sportsBrands.length)];
                    addHistoryEvent(`Assinou com a ${randomBrand}!`);
                },
                tooltip: "+2 Overall"
            }
        ]
    },
    {
        title: "Conflito no Vestu√°rio!",
        text: "Desentendimento com companheiros de equipe!",
        choices: [
            {
                text: "Mediar o conflito",
                action: () => {
                    player.morale += 10;
                    player.form -= 5;
                    showMessage("Voc√™ melhorou o ambiente! Moral +10, Forma -5");
                },
                tooltip: "Foco em trabalho em equipe"
            },
            {
                text: "Ignorar a situa√ß√£o",
                action: () => {
                    player.morale -= 15;
                    showMessage("Ambiente contaminado! Moral -15");
                },
                tooltip: "Risco de queda no desempenho"
            }
        ]
    },
    {
        title: "Maratona de Jogos!",
        text: "Sequ√™ncia intensa de partidas no calend√°rio!",
        choices: [
            {
                text: "Treinar intensamente",
                action: () => {
                    player.form -= 10;
                    player.overall += 3;
                    showMessage("Desgaste f√≠sico! Forma -10, Overall +3");
                },
                tooltip: "Ganho de experi√™ncia com custo"
            },
            {
                text: "Preservar energia",
                action: () => {
                    player.form += 15;
                    player.morale -= 5;
                    showMessage("Conservou energia! Forma +15, Moral -5");
                },
                tooltip: "Equil√≠brio conservador"
            }
        ]
    },
    {
        title: "Convoca√ß√£o para Sele√ß√£o!",
        text: "Voc√™ foi convocado para um amistoso da sele√ß√£o nacional!",
        choices: [
          {
            text: "Aceitar convoca√ß√£o",
            action: () => {
              player.morale = Math.min(100, player.morale + 15);
              player.overall = Math.min(100, player.overall + 4);
              showMessage("Orgulho nacional! Moral +15, Overall +4");
              addHistoryEvent('Orgulho nacional! Jogou pela Sele√ß√£o');
            },
            tooltip: "+15 Moral, +4 Overall"
          },
          {
            text: "Recusar e descansar",
            action: () => {
              player.form = Math.min(100, player.form + 20);
              showMessage("Descanso bem-vindo! Forma +20");
            },
            tooltip: "+20 Forma"
          }
        ]
    },
    {
      title: "Puskas",
      text: "Voc√™ est√° entre os finalistas do pr√™mio de Puskas do ano!",
      choices: [
        {
          text: "Comparecer √† premia√ß√£o",
          action: () => {
            if (Math.random() < 0.3) {
                player.overall += 5;
                const title = `Pr√™mio Puskas - T${league.season}`;
                if(!player.achievements.includes(title)) {
                    player.achievements.push(title);
                    addHistoryEvent(title);
                }
                showMessage("Voc√™ venceu! Overall +5");
            } else {
              showMessage("N√£o levou o pr√™mio, mas fez bonito.");
            }
          },
          tooltip: "Chance de ganhar +5 Overall"
        },
        {
          text: "Ficar em casa",
          action: () => {
            player.morale -= 15;
            showMessage("Perdeu visibilidade! Moral -15");
          },
          tooltip: "-15 Moral"
        }
      ]
    },
    {
      title: "Rumores de Transfer√™ncia",
      text: "Jornais falam que um grande clube te quer.",
      choices: [
        {
          text: "Falar com o empres√°rio",
          action: () => {
            player.morale += 5;
            showMessage("Moral alta com rumores! +5 Moral");
          },
          tooltip: "+5 Moral"
        },
        {
          text: "Ignorar rumores",
          action: () => {
            player.morale -= 5;
            showMessage("Voc√™ parece distante. Moral -5");
          },
          tooltip: "-5 Moral"
        }
      ]
    },
    {
      title: "Puni√ß√£o por Cart√µes",
      text: "Voc√™ recebeu um cart√£o vermelho injusto!",
      choices: [
        {
          text: "Apelar ao tribunal esportivo",
          action: () => {
            if (Math.random() < 0.5) {
              showMessage("Cart√£o anulado!");
            } else {
              player.form -= 5;
              showMessage("Apela√ß√£o negada. Forma -5");
            }
          },
          tooltip: "50% chance de anular"
        },
        {
          text: "Cumprir suspens√£o",
          action: () => {
            player.form -= 10;
            showMessage("Perdeu ritmo. Forma -10");
          },
          tooltip: "-10 Forma"
        }
      ]
    },
    {
      title: "Sondagem de Jovens Talentos",
      text: "O clube te convida para ajudar a avaliar juniores.",
      choices: [
        {
          text: "Aceitar convite",
          action: () => {
            player.morale += 8;
            showMessage("Mentoria gratificante! Moral +8");
          },
          tooltip: "+8 Moral"
        },
        {
          text: "Recusar",
          action: () => {
            player.morale -= 3;
            showMessage("Perdeu chance de networking. Moral -3");
          },
          tooltip: "-3 Moral"
        }
      ]
    },
    {
      title: "Viol√™ncia de Torcida",
      text: "Houve confus√£o entre torcidas ap√≥s o jogo!",
      choices: [
        {
          text: "Defender a equipe",
          action: () => {
            player.morale += 10;
            showMessage("Voc√™ se posicionou e subiu moral! +10 Moral");
          },
          tooltip: "+10 Moral"
        },
        {
          text: "Ficar alheio",
          action: () => {
            player.morale -= 10;
            showMessage("Ficou mal-visto. Moral -10");
          },
          tooltip: "-10 Moral"
        }
      ]
    },
    {
      title: "Erro de Arbitragem",
      text: "Um gol foi anulado por impedimento duvidoso.",
      choices: [
        {
          text: "Reclamar",
          action: () => {
            player.morale -= 5;
            showMessage("Foco perdido. Moral -5");
          },
          tooltip: "-5 Moral"
        },
        {
          text: "Continuar concentrado",
          action: () => {
            player.form += 5;
            showMessage("Mente no jogo. Forma +5");
          },
          tooltip: "+5 Forma"
        }
      ]
    },
    {
      title: "Oferta de Embaixador",
      text: "Patrocinador quer voc√™ como embaixador de marca.",
      choices: [
        {
          text: "Assinar contrato",
          action: () => {
            player.balance += 50000;
            showMessage("‚Ç¨50k por divulgar a marca!");
          },
          tooltip: "+‚Ç¨50k"
        },
        {
          text: "Negociar valores",
          action: () => {
            player.balance += 70000;
            player.morale += 5;
            showMessage("Melhor neg√≥cio! +‚Ç¨70k, +5 Moral");
          },
          tooltip: "+‚Ç¨70k, +5 Moral"
        }
      ]
    },
    {
      title: "Doen√ßa S√∫bita",
      text: "Voc√™ ficou doente e foi para o hospital.",
      choices: [
        {
          text: "Tratamento Intensivo",
          action: () => {
            player.balance -= 15000;
            player.form -= 20;
            showMessage("Custo alto e recupera√ß√£o lenta. -‚Ç¨15k, Forma -20");
          },
          tooltip: "-‚Ç¨15k, -20 Forma"
        },
        {
          text: "Recuperar em casa",
          action: () => {
            player.form -= 10;
            showMessage("Recupera√ß√£o mais lenta. Forma -10");
          },
          tooltip: "-10 Forma"
        }
      ]
    },
    {
      title: "Festa do Vesti√°rio",
      text: "Te convidaram para uma confraterniza√ß√£o p√≥s-jogo.",
      choices: [
        {
          text: "Ir na festa",
          action: () => {
            player.morale += 10;
            player.form -= 10;
            showMessage("Energizado mas cansado. +10 Moral, Forma -10");
          },
          tooltip: "+10 Moral, -10 Forma"
        },
        {
          text: "Evitar festa",
          action: () => {
            player.form += 5;
            showMessage("Descanso extra! Forma +5");
          },
          tooltip: "+5 Forma"
        }
      ]
    },
    {
      title: "Treino Extra com √çdolo",
      text: "Voc√™ treina com um ex-craque do clube.",
      choices: [
        {
          text: "Aprender tudo",
          action: () => {
            player.overall += 3;
            showMessage("Sabedoria de √≠dolo! Overall +3");
          },
          tooltip: "+3 Overall"
        },
        {
          text: "Treino leve",
          action: () => {
            player.form += 5;
            showMessage("Treino motivacional! Forma +5");
          },
          tooltip: "+5 Forma"
        }
      ]
    },
    {
      title: "Protesto de Usu√°rios",
      text: "Torcedores protestam pedindo sua sa√≠da.",
      choices: [
        {
          text: "Dialogar com l√≠deres",
          action: () => {
            player.morale -= 5;
            showMessage("Tentou, mas moral cai. -5 Moral");
          },
          tooltip: "-5 Moral"
        },
        {
          text: "Ignorar protesto",
          action: () => {
            player.morale -= 10;
            showMessage("Moral despenca. -10 Moral");
          },
          tooltip: "-10 Moral"
        }
      ]
    },
    {
      title: "Mega Oferta Salarial",
      text: "Voc√™ recebe a melhor proposta da carreira!",
      choices: [
        {
          text: "Assinar contrato",
          action: () => {
            player.balance += 200000;
            player.morale += 20;
            showMessage("Fortuna e motiva√ß√£o! +‚Ç¨200k, +20 Moral");
          },
          tooltip: "+‚Ç¨200k, +20 Moral"
        },
        {
          text: "Exigir b√¥nus maior",
          action: () => {
            player.balance += 250000;
            showMessage("B√¥nus extra! +‚Ç¨250k");
          },
          tooltip: "+‚Ç¨250k"
        }
      ]
    },
    {
      title: "Furto de Equipamento",
      text: "Seu material de treino foi roubado!",
      choices: [
        {
          text: "Cobrar clube",
          action: () => {
            player.balance += 10000;
            showMessage("Clube indenizou ‚Ç¨10k");
          },
          tooltip: "+‚Ç¨10k"
        },
        {
          text: "Pagar do pr√≥prio bolso",
          action: () => {
            player.balance -= 5000;
            showMessage("Gastou ‚Ç¨5k em reposi√ß√£o");
          },
          tooltip: "-‚Ç¨5k"
        }
      ]
    },
    {
      title: "Natal Solid√°rio",
      text: "Voc√™ participa de a√ß√£o social no natal.",
      choices: [
        {
          text: "Doar 10% do sal√°rio",
          action: () => {
            const donation = Math.floor(player.balance * 0.1);
            player.balance -= donation;
            player.morale += 15;
            showMessage(`Generoso! Doou ‚Ç¨${donation}, +15 Moral`);
          },
          tooltip: "-10% Saldo, +15 Moral"
        },
        {
          text: "Apenas comparecer",
          action: () => {
            player.morale += 5;
            showMessage("Presen√ßa solid√°ria! +5 Moral");
          },
          tooltip: "+5 Moral"
        }
      ]
    },
    {
      title: "Treinador Substitu√≠do",
      text: "O t√©cnico foi demitido e um novo chega.",
      choices: [
        {
          text: "Apoiar o novo",
          action: () => {
            player.morale += 10;
            showMessage("Entrosamento imediato! +10 Moral");
          },
          tooltip: "+10 Moral"
        },
        {
          text: "Resistir √† mudan√ßa",
          action: () => {
            player.morale -= 10;
            showMessage("Conflito inicial! -10 Moral");
          },
          tooltip: "-10 Moral"
        }
      ]
    },
    {
      title: "Chuva Torrencial",
      text: "Jogo adiado por tempestade!",
      choices: [
        {
          text: "Aproveitar para treinar",
          action: () => {
            player.form += 5;
            showMessage("Treino extra! Forma +5");
          },
          tooltip: "+5 Forma"
        },
        {
          text: "Descansar em casa",
          action: () => {
            player.morale += 5;
            showMessage("Obs.: moral +5");
          },
          tooltip: "+5 Moral"
        }
      ]
    },      
    {
      title: "Entrevista na TV",
      text: "Voc√™ foi convidado para dar uma entrevista esportiva em rede nacional.",
      choices: [
        {
          text: "Aceitar convite",
          action: () => {
            player.morale += 8;
            showMessage("Boa exposi√ß√£o! Moral +8");
            addHistoryEvent('Deu entrevista na TV');
          },
          tooltip: "+8 Moral"
        },
        {
          text: "Recusar para focar no treino",
          action: () => {
            player.form += 5;
            showMessage("Foco total no treino! Forma +5");
            addHistoryEvent('Recusou entrevista para treinar');
          },
          tooltip: "+5 Forma"
        }
      ]
    },
    {
      title: "Cl√≠nica de Reabilita√ß√£o",
      text: "Voc√™ tem acesso gratuito a uma cl√≠nica de √∫ltima gera√ß√£o.",
      choices: [
        {
          text: "Fazer tratamento avan√ßado",
          action: () => {
            player.overall = Math.min(100, player.overall + 3);
            showMessage("Recupera√ß√£o top! +3 Overall");
            addHistoryEvent('Tratamento avan√ßado em cl√≠nica de reabilita√ß√£o');
          },
          tooltip: "+3 Overall"
        },
        {
          text: "Continuar rotina normal",
          action: () => {
            player.form -= 10;
            showMessage("Recupera√ß√£o lenta... Forma -10");
            addHistoryEvent('Optou por rotina normal ao inv√©s de cl√≠nica');
          },
          tooltip: "-10 Forma"
        }
      ]
    },
    {
      title: "Workshop T√°tico",
      text: "Treinadores renomados oferecem um workshop de estrat√©gia.",
      choices: [
        {
          text: "Participar intensamente",
          action: () => {
            player.overall += 2;
            player.morale += 5;
            showMessage("Vis√£o t√°tica aprimorada! +2 Overall, +5 Moral");
            addHistoryEvent('Participou de workshop t√°tico');
          },
          tooltip: "+2 Overall, +5 Moral"
        },
        {
          text: "Pular para descansar",
          action: () => {
            player.form += 10;
            showMessage("Descanso bem-vindo! Forma +10");
            addHistoryEvent('Pulou workshop para descansar');
          },
          tooltip: "+10 Forma"
        }
      ]
    },
    {
      title: "Rede Social Viral",
      text: "Um v√≠deo seu viralizou online!",
      choices: [
        {
          text: "Aproveitar fama",
          action: () => {
            player.balance += 20000;
            showMessage("Patroc√≠nios explodiram! +‚Ç¨20k");
            addHistoryEvent('V√≠deo viral gerou patroc√≠nios');
          },
          tooltip: "+‚Ç¨20k"
        },
        {
          text: "Evitar exposi√ß√£o",
          action: () => {
            player.morale -= 5;
            showMessage("Fama indesejada... Moral -5");
            addHistoryEvent('Evocou privacidade ap√≥s viralizar');
          },
          tooltip: "-5 Moral"
        }
      ]
    },
    {
      title: "Dia de Voluntariado",
      text: "Voc√™ participa de a√ß√£o social no projeto do clube.",
      choices: [
        {
          text: "Engajar na comunidade",
          action: () => {
            player.morale += 10;
            showMessage("Ajudou a comunidade! Moral +10");
            addHistoryEvent('Participou de voluntariado comunit√°rio');
          },
          tooltip: "+10 Moral"
        },
        {
          text: "Recusar para descansar",
          action: () => {
            player.form += 5;
            showMessage("Descansou bem! Forma +5");
            addHistoryEvent('Recusou voluntariado para descansar');
          },
          tooltip: "+5 Forma"
        }
      ]
    },
    {
      title: "Oferta de Cripto",
      text: "Uma startup oferece investir em criptomoeda em troca de divulga√ß√£o.",
      choices: [
        {
          text: "Investir e divulgar",
          action: () => {
            player.balance += 15000;
            player.morale += 5;
            showMessage("Investimento retornou bem! +‚Ç¨15k, +5 Moral");
            addHistoryEvent('Divulgou e investiu em criptomoeda');
          },
          tooltip: "+‚Ç¨15k, +5 Moral"
        },
        {
          text: "Recusar arriscado",
          action: () => {
            player.morale += 2;
            showMessage("Evadiu risco! +2 Moral");
            addHistoryEvent('Recusou oferta de criptomoeda');
          },
          tooltip: "+2 Moral"
        }
      ]
    },
    {
      title: "Desafio de Skills",
      text: "Clube organiza competi√ß√£o interna de dribles e finaliza√ß√µes.",
      choices: [
        {
          text: "Participar com garra",
          action: () => {
            if (Math.random() < 0.4) {
              player.overall += 1;
              showMessage("Destaqueu-se! +1 Overall");
              addHistoryEvent('Venceu desafio de skills');
            } else {
              showMessage("N√£o brilhou dessa vez.");
              addHistoryEvent('Participou do desafio de skills sem vencer');
            }
          },
          tooltip: "Chance de +1 Overall"
        },
        {
          text: "Usar a competi√ß√£o para treinar",
          action: () => {
            player.form += 5;
            showMessage("Treino √∫til! Forma +5");
            addHistoryEvent('Usou desafio como treino');
          },
          tooltip: "+5 Forma"
        }
      ]
    },
    {
      title: "Direitos de Imagem",
      text: "Voc√™ tem semin√°rio sobre contratos de direitos de imagem.",
      choices: [
        {
          text: "Aprender sobre contratos",
          action: () => {
            player.balance += 10000;
            showMessage("Economizou em taxas! +‚Ç¨10k");
            addHistoryEvent('Participou de semin√°rio de direitos de imagem');
          },
          tooltip: "+‚Ç¨10k"
        },
        {
          text: "Desconsiderar assunto",
          action: () => {
            player.morale -= 5;
            showMessage("Pagou taxas altas... Moral -5");
            addHistoryEvent('Ignorou semin√°rio de direitos de imagem');
          },
          tooltip: "-5 Moral"
        }
      ]
    }
];

// Sistema de Liga
let league = {
    currentView: 'B',
    season: 1,
    round: 0,
    serieA: {
        teams: [],
        standings: []
    },
    serieB: {
        teams: [],
        standings: []
    }
};

// Listas completas de times
let SERIE_A_TEAMS = [
    {name: "Flamengo", overallRange: [85, 100]},
    {name: "Palmeiras", overallRange: [84, 98]},
    {name: "Atl√©tico-MG", overallRange: [83, 96]},
    {name: "Corinthians", overallRange: [82, 94]},
    {name: "Fluminense", overallRange: [81, 93]},
    {name: "Internacional", overallRange: [80, 92]},
    {name: "S√£o Paulo", overallRange: [79, 91]},
    {name: "Vasco", overallRange: [78, 90]},
    {name: "Botafogo", overallRange: [77, 89]},
    {name: "Santos", overallRange: [76, 88]},
    {name: "Gr√™mio", overallRange: [75, 87]},
    {name: "Athletico-PR", overallRange: [74, 86]},
    {name: "Bahia", overallRange: [73, 85]},
    {name: "Cruzeiro", overallRange: [72, 84]},
    {name: "Fortaleza", overallRange: [71, 83]},
    {name: "Cuiab√°", overallRange: [70, 82]},
    {name: "Bragantino", overallRange: [69, 81]},
    {name: "Goi√°s", overallRange: [68, 80]},
    {name: "Coritiba", overallRange: [67, 79]},
    {name: "Am√©rica-MG", overallRange: [66, 78]}
];

let SERIE_B_TEAMS = [
    {name: "BSL Team", overallRange: [65, 75]},
    {name: "Sport", overallRange: [70, 80]},
    {name: "Guarani", overallRange: [64, 74]},
    {name: "Crici√∫ma", overallRange: [63, 73]},
    {name: "Ponte Preta", overallRange: [62, 72]},
    {name: "Sampaio Corr√™a", overallRange: [61, 71]},
    {name: "CRB", overallRange: [60, 70]},
    {name: "Oper√°rio-PR", overallRange: [59, 69]},
    {name: "Novorizontino", overallRange: [58, 68]},
    {name: "Vila Nova", overallRange: [57, 67]},
    {name: "Ituano", overallRange: [56, 66]},
    {name: "Chapecoense", overallRange: [55, 65]},
    {name: "Londrina", overallRange: [54, 64]},
    {name: "Tombense", overallRange: [53, 63]},
    {name: "ABC", overallRange: [52, 62]},
    {name: "Brusque", overallRange: [51, 61]},
    {name: "N√°utico", overallRange: [50, 60]},
    {name: "Volta Redonda", overallRange: [49, 59]},
    {name: "Vit√≥ria", overallRange: [48, 58]},
    {name: "CSA", overallRange: [47, 57]}
];

let overallChart;
let marketValueChart;

function initChart() {
    const overallCtx = document.getElementById('overall-chart').getContext('2d');
    const marketValueCtx = document.getElementById('market-value-chart').getContext('2d');

    // Gr√°fico de Overall
    overallChart = new Chart(overallCtx, {
        type: 'line',
        data: {
            labels: progressionData.age, // Alterado para age
            datasets: [{
                label: 'Overall',
                data: progressionData.overall,
                borderColor: '#4CAF50',
                tension: 0.1
            }]
        },
        options: {
            responsive: true,
            scales: {
                y: {
                    beginAtZero: false,
                    max: 110,
                    title: {
                        display: true,
                        text: 'Overall Rating'
                    }
                }
            }
        }
    });

    // Gr√°fico de Valor de Mercado
    marketValueChart = new Chart(marketValueCtx, {
        type: 'line',
        data: {
            labels: progressionData.age, // Alterado para age
            datasets: [{
                label: 'Valor de Mercado (‚Ç¨)',
                data: progressionData.marketValue,
                borderColor: '#FF9800',
                tension: 0.1
            }]
        },
        options: {
            responsive: true,
            scales: {
                y: {
                    beginAtZero: false,
                    title: {
                        display: true,
                        text: 'Valor de Mercado'
                    },
                    ticks: {
                        callback: function(value) {
                            return '‚Ç¨' + (value / 1000000).toFixed(1) + 'M';
                        }
                    }
                }
            }
        }
    });
}

function updateChart() {
    progressionData.age.push(player.age);
    progressionData.overall.push(player.overall);
    progressionData.marketValue.push(player.marketValue);
    
    overallChart.update();
    marketValueChart.update();
}

function resetGame() {
    location.reload();
}

function updateDashboard() {
    const elements = {
        age: document.getElementById('age'),
        club: document.getElementById('club'),
        overall: document.getElementById('overall'),
        marketValue: document.getElementById('marketValue'),
        balance: document.getElementById('balance'),
        season: document.getElementById('season'),
        round: document.getElementById('round'),
        leagueTitle: document.getElementById('league-title'),
        form: document.getElementById('form'),
        morale: document.getElementById('morale'),
        goals: document.getElementById('goals'),
        assists: document.getElementById('assists')
    };

    for (const [key, element] of Object.entries(elements)) {
        if (!element) {
            console.error(`Elemento '${key}' n√£o encontrado!`);
            return;
        }
    }

    // Atualizar valores
    elements.age.textContent = player.age.toFixed(1);
    elements.club.textContent = player.club;
    elements.overall.textContent = player.overall;
    elements.marketValue.textContent = `‚Ç¨ ${player.marketValue.toLocaleString()}`;
    elements.balance.textContent = `‚Ç¨ ${player.balance.toLocaleString()}`;
    elements.season.textContent = league.season;
    elements.round.textContent = `${league.round}/38`;
    elements.leagueTitle.textContent = `Campeonato Brasileiro S√©rie ${league.currentView}`;
    
    // Novas estat√≠sticas
    elements.form.textContent = player.form;
    elements.morale.textContent = player.morale;
    elements.goals.textContent = player.goals;
    elements.assists.textContent = player.assists;

    // Cores din√¢micas
    const updateColor = (element, value) => {
        element.style.color = value >= 80 ? '#4CAF50' : 
                             value >= 60 ? '#FFC107' : 
                             '#F44336';
    };

    updateColor(elements.form, player.form);
    updateColor(elements.morale, player.morale);
    
    // Atualizar tooltips
    elements.form.title = `Condi√ß√£o F√≠sica Atual (0-100)\n${getFormDescription(player.form)}`;
    elements.morale.title = `Confian√ßa e Motiva√ß√£o (0-100)\n${getMoraleDescription(player.morale)}`;
}

// Fun√ß√µes auxiliares
function getFormDescription(value) {
    return value >= 90 ? "Condi√ß√£o de Pico!" :
           value >= 75 ? "Em Excelente Forma" :
           value >= 60 ? "Condi√ß√£o Adequada" :
           value >= 40 ? "Cansado/Desgastado" :
           "Condi√ß√£o Prec√°ria";
}

function getMoraleDescription(value) {
    return value >= 90 ? "Moral Extremamente Alta!" :
           value >= 75 ? "Muito Motivado" :
           value >= 60 ? "Confian√ßa Normal" :
           value >= 40 ? "Moral Abalada" :
           "Desmotivado/Crise";
}

function initLeague() {
    league.serieA.teams = SERIE_A_TEAMS.map(team => ({
        name: team.name,
        pts: 0,
        played: 0,
        wins: 0,
        draws: 0,
        losses: 0,
        gf: 0,
        ga: 0,
        overallRange: team.overallRange
    }));
    
    league.serieB.teams = SERIE_B_TEAMS.map(team => ({
        name: team.name,
        pts: 0,
        played: 0,
        wins: 0,
        draws: 0,
        losses: 0,
        gf: 0,
        ga: 0,
        overallRange: team.overallRange
    }));
    
    updateStandings();
}

function simulateMatch(home, away) {
    const homeStrength = home.name === player.club ? 
        player.overall : 
        (home.overallRange[0] + home.overallRange[1]) / 2;
    
    const awayStrength = away.name === player.club ? 
        player.overall : 
        (away.overallRange[0] + away.overallRange[1]) / 2;

    // Calcular gols
    const result = {
        homeGoals: Math.floor(Math.random() * (homeStrength/25)),
        awayGoals: Math.floor(Math.random() * (awayStrength/25))
    };

    // Sistema de contribui√ß√£o do jogador
    if(home.name === player.club || away.name === player.club) {
        const baseGoalChance = calculateGoalChance(player.overall);
        const baseAssistChance = calculateAssistChance(player.overall);
        
        // Ajustar pela forma (0-100 ‚Üí 0.8-1.2 modificador)
        const formModifier = 0.8 + (player.form/100 * 0.4);
        
        // Chance final ajustada
        const finalGoalChance = Math.min(0.95, baseGoalChance * formModifier);
        const finalAssistChance = Math.min(0.85, baseAssistChance * formModifier);
        
        // Sistema de ataque por jogador
        const attacks = Math.floor(3 + (player.overall/20)); // N√∫mero de chances por jogo
        
        for(let i = 0; i < attacks; i++) {
            if(Math.random() < finalGoalChance) {
                player.goals += 1;
                player.seasonalStats.goals += 1;
                player.morale = Math.min(100, player.morale + 1);
            } else if(Math.random() < finalAssistChance) {
                player.assists += 1;
                player.seasonalStats.assists += 1;
                player.form = Math.min(100, player.form + 0.5);
            }
        }
    }

    // Desgaste f√≠sico natural
    if(home.name === player.club || away.name === player.club) {
        player.form = Math.max(0, player.form - Math.floor(Math.random() * 3));
    }

    return result;
}

function simulateDivisionRound(teams) {
    const matches = generateRoundMatches(teams);
    
    matches.forEach(match => {
        const home = teams.find(t => t.name === match.home);
        const away = teams.find(t => t.name === match.away);
        const result = simulateMatch(home, away);

        home.gf += result.homeGoals;
        home.ga += result.awayGoals;
        away.gf += result.awayGoals;
        away.ga += result.homeGoals;

        if(result.homeGoals > result.awayGoals) {
            home.pts += 3;
            home.wins++;
            away.losses++;
        } else if(result.awayGoals > result.homeGoals) {
            away.pts += 3;
            away.wins++;
            home.losses++;
        } else {
            home.pts += 1;
            away.pts += 1;
            home.draws++;
            away.draws++;
        }
        
        home.played++;
        away.played++;
    });
}

function simulateSingleRound() {
    updateMarketValue()
    if(league.round >= 38) return;

    simulateDivisionRound(league.serieA.teams);
    simulateDivisionRound(league.serieB.teams);

    league.round++;
    
    if(league.round % 5 === 0) {
        player.form = Math.min(100, player.form + Math.floor(Math.random() * 5));
        player.morale = Math.min(100, player.morale + Math.floor(Math.random() * 5));
    }
    
    updateStandings();
    player.age = Number((player.age + (1/38)).toFixed(2));
}

function generateRoundMatches(teams) {
    const shuffled = [...teams].sort(() => 0.5 - Math.random());
    const matches = [];
    
    for(let i = 0; i < shuffled.length; i += 2) {
        if(shuffled[i+1]) {
            matches.push({
                home: shuffled[i].name,
                away: shuffled[i+1].name
            });
        }
    }
    return matches;
}

function switchLeague(division) {
    league.currentView = division;
    updateStandings();
    updateDashboard();
}

function updateStandings() {
      // recalcula as duas tabelas
    const sortFn = (a, b) => 
      b.pts - a.pts ||
      (b.wins - a.wins) ||
      ((b.gf - b.ga) - (a.gf - a.ga));

    league.serieA.standings = [...league.serieA.teams].sort(sortFn);
    league.serieB.standings = [...league.serieB.teams].sort(sortFn);
    const currentLeague = league.currentView === 'A' ? league.serieA : league.serieB;
    
    currentLeague.standings = currentLeague.teams.sort((a, b) => 
        b.pts - a.pts || (b.wins - a.wins) || (b.gf - b.ga) - (a.gf - a.ga)
    );

    const tbody = document.getElementById('table-body');
    tbody.innerHTML = '';
    
    currentLeague.standings.forEach((team, index) => {
        const row = document.createElement('tr');
        row.className = team.name === player.club ? 'user-team' : 
                       index < (league.currentView === 'A' ? 16 : 4) ? 'promotion-zone' :
                       index < (league.currentView === 'A' ? 4 : 16) ? 'relegation-zone' : '';
        
        row.innerHTML = `
            <td>${index + 1}</td>
            <td data-overall="Overall: ${team.overallRange[0]}-${team.overallRange[1]}">${team.name}</td>
            <td>${team.pts}</td>
            <td>${team.played}</td>
            <td>${team.wins}</td>
            <td>${team.draws}</td>
            <td>${team.losses}</td>
        `;
        tbody.appendChild(row);
    });
}

function advanceTime() {
    updateMarketValue();
    const roundsToPlay = Math.min(5, 38 - league.round);
    
    for(let i = 0; i < roundsToPlay; i++) {
        simulateSingleRound();
    }

    if(league.round >= 38) {
        endSeason();
    }

    updateDashboard();
    checkStoryEvents();
    updateChart();
    updateMatchStats();

    if(league.round < 38 && Math.random() < 0.3) {
        triggerRandomEvent();
    }
}

function checkAchievements() {
    const g = player.seasonalStats.goals;
    const a = player.seasonalStats.assists;
    
    if(g >= 25 && !player.achievements.includes(`Artilheiro da S√©rie ${league.currentView} - T${league.season}`)) {
        const title = `Artilheiro da S√©rie ${league.currentView} - T${league.season} (${g} gols)`;
        player.achievements.push(title);
        addHistoryEvent(title);
    }
    if(a >= 15 && !player.achievements.includes(`L√≠der de Assist√™ncias da S√©rie ${league.currentView} - T${league.season}`)) {
        const title = `L√≠der de Assist√™ncias da S√©rie ${league.currentView} - T${league.season} (${a} passes)`;
        player.achievements.push(title);
        addHistoryEvent(title);
    }
    if(g >= 15 && a >= 10 && !player.achievements.includes(`Melhor Jogador da S√©rie ${league.currentView} - T${league.season}`)) {
        const title = `Melhor Jogador da S√©rie ${league.currentView} - T${league.season}`;
        player.achievements.push(title);
        addHistoryEvent(title);
    }
    
    // Atualizar o trophy case
    updateTrophyCase();
}

function endSeason() {
      // for√ßa a S√©rie A a recalcular o standings
    const sortFn = (a, b) => 
      b.pts - a.pts ||
      (b.wins - a.wins) ||
      ((b.gf - b.ga) - (a.gf - a.ga));
    league.serieA.standings = [...league.serieA.teams].sort(sortFn);
    showMessage(`Fim da Temporada ${league.season}! Posi√ß√£o Final: ${league[league.currentView === 'A' ? 'serieA' : 'serieB'].standings.findIndex(t => t.name === player.club) + 1}¬∫`, true);
    
    // Promo√ß√£o/Rebaixamento
    const rebaixadosA = league.serieA.standings.slice(16, 20);  // pega √≠ndices 16,17,18,19
    const promovidosB = league.serieB.standings.slice(0, 4);

    // Criar novas ligas mantendo 20 times cada
    const novaSerieA = [
        ...league.serieA.teams.filter(t => 
             !rebaixadosA.some(r => r.name === t.name)
        ),
        ...promovidosB
      ];
      
      const novaSerieB = [
        ...rebaixadosA,
        ...league.serieB.teams.filter(t =>
             !promovidosB.some(p => p.name === t.name)
        )
      ];
      

    // Atualizar listas globais (alterar para let)
    SERIE_A_TEAMS.splice(0, SERIE_A_TEAMS.length, ...novaSerieA.map(t => ({
        name: t.name,
        overallRange: t.overallRange
    })));
    
    SERIE_B_TEAMS.splice(0, SERIE_B_TEAMS.length, ...novaSerieB.map(t => ({
        name: t.name, 
        overallRange: t.overallRange
    })));

    // Verificar consequ√™ncias
    if(rebaixadosA.some(t => t.name === player.club)) {
        player.marketValue *= 0.85;
        showMessage("Rebaixado para S√©rie B! Valor de mercado reduzido.");
    }
    
    if(promovidosB.some(t => t.name === player.club)) {
        player.marketValue *= 1.4;
        showMessage("Promovido para S√©rie A! Valor de mercado aumentado.");
    }
    checkChampionshipTitle();
    checkAchievements();
    // Resetar estat√≠sticas sazonais
    player.seasonalStats = { goals: 0, assists: 0 };
    setTimeout(() => {
        showTransferEvent();
    }, 1000);
}

function initNewSeason() {
    league.season++;
    league.round = 0;
    
    // Sistema de decl√≠nio ap√≥s os 30 anos
    if(player.age >= 30) {
        const decline = Math.min(3, Math.floor((player.age - 30) * 0.7));
        player.overall = Math.max(40, player.overall - decline);
    } else {
        player.overall = Math.min(100, player.overall + 2);
    }
    
    player.form = Math.min(100, player.form + 30);
    updateMarketValue(); // Atualizar valor de mercado
    initLeague();
    updateDashboard();
}

function showTransferEvent() {
    const targetDivision = SERIE_A_TEAMS.concat(SERIE_B_TEAMS).filter(team => 
        player.overall >= team.overallRange[0] && 
        player.overall <= team.overallRange[1] &&
        team.name !== player.club
    );

    if(targetDivision.length > 0 && Math.random() < 0.65) {
        const newClub = targetDivision[Math.floor(Math.random() * targetDivision.length)];
        
        showEvent({
            title: "Oferta de Transfer√™ncia!",
            text: `${newClub.name} est√° interessado! (Requer Overall: ${newClub.overallRange[0]}-${newClub.overallRange[1]})`,
            choices: [{
                text: `Assinar com ${newClub.name}`,
                action: () => {
                    player.club = newClub.name;
                    player.marketValue *= 1.3;
                    player.balance += 500000;
                    player.clubs.push(newClub.name);
                    initNewSeason();
                    addHistoryEvent(`Assinou com ${newClub.name} no valor de ‚Ç¨${player.marketValue.toLocaleString('pt-BR')}` );
                },
                tooltip: "Muda de clube e aumenta valor"
            }, {
                text: "Recusar oferta",
                action: () => {
                    player.morale = Math.min(100, player.morale + 15);
                    initNewSeason();
                },
                tooltip: "Aumenta moral"
            }]
        });
    } else {
        initNewSeason();
    }
}

// Fun√ß√µes de Eventos
function triggerRandomEvent() {
    const event = events[Math.floor(Math.random() * events.length)];
    showEvent(event);
}

function showEvent(event) {
    const modal = document.getElementById('event-modal');
    document.getElementById('event-title').textContent = event.title;
    document.getElementById('event-text').textContent = event.text;

    
    const choices = document.getElementById('event-choices');
    choices.innerHTML = '';
    
    event.choices.forEach(choice => {
        const button = document.createElement('button');
        button.className = 'choice-button';
        button.innerHTML = `${choice.text}<div class="tooltip">${choice.tooltip}</div>`;
        button.onclick = () => {
            toggleMusic(false); // Retomar m√∫sica ao fechar
            choice.action();
            modal.classList.add('hidden');
            updateDashboard();
            updateChart();
        };
        choices.appendChild(button);
    });
    
    modal.classList.remove('hidden');
}

function showMessage(message, isSeasonEnd = false) {
    const modal = document.getElementById('event-modal');
    const choices = document.getElementById('event-choices');
    
    document.getElementById('event-title').textContent = isSeasonEnd ? 
        "Relat√≥rio Final da Temporada" : 
        "Resultado";
    
    document.getElementById('event-text').textContent = message;
    
    choices.innerHTML = isSeasonEnd ? 
        '<button class="choice-button" onclick="document.getElementById(\'event-modal\').classList.add(\'hidden\')">Iniciar Nova Temporada</button>' :
        '<button class="choice-button" onclick="document.getElementById(\'event-modal\').classList.add(\'hidden\')">Continuar</button>';
    
    modal.classList.remove('hidden');
}

function checkDomElements() {
    const requiredElements = [
        'age', 
        'club', 
        'overall', 
        'marketValue', 
        'balance', 
        'season', 
        'round', 
        'league-title',
        'overall-chart',
        'market-value-chart',
        'event-modal',
        'table-body'
    ];

    requiredElements.forEach(id => {
        if (!document.getElementById(id)) {
            console.error(`Elemento com ID '${id}' n√£o encontrado!`);
        } else {
            console.log(`Elemento '${id}' OK`);
        }
    });
}


function getStatusColor(value) {
    if(value >= 80) return '#4CAF50'; // Verde
    if(value >= 60) return '#FFC107'; // Amarelo
    return '#F44336'; // Vermelho
}


const musicFiles = ['music2.mp3', 'music1.mp3'];
let currentTrack = 0;
let audioPlayer = document.getElementById('background-music');

// Fun√ß√£o para alternar m√∫sicas
function playNextTrack() {
    currentTrack = (currentTrack + 1) % musicFiles.length;
    audioPlayer.src = musicFiles[currentTrack];
    audioPlayer.play();
}

// Iniciar m√∫sica quando houver intera√ß√£o do usu√°rio
document.addEventListener('click', function initAudio() {
    if (audioPlayer.paused) {
        audioPlayer.src = musicFiles[currentTrack];
        audioPlayer.play();
        audioPlayer.volume = 0.3; // Ajuste o volume
        audioPlayer.addEventListener('ended', playNextTrack);
    }
    document.removeEventListener('click', initAudio);
});

// Controle de pausa para modais
function toggleMusic(pause) {
    if(pause) {
        audioPlayer.pause();
    } else {
        audioPlayer.play();
    }
}


// Inicializa√ß√£o
document.addEventListener('DOMContentLoaded', () => {
    checkDomElements();
    updateTrophyCase();
    initLeague();
    initChart();
    updateDashboard();
});
